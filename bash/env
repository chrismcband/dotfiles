export EDITOR=vim
#export PATH=/Applications/MAMP/Library/bin:/usr/local/sbin:$PATH
export PATH=~/bin:/usr/local/sbin:/usr/local/share/npm/bin:/usr/local/bin:$PATH
export PATH="/usr/local/opt/openssl/bin:$PATH"
#export PATH=/usr/local/mysql/bin:/Applications/MAMP/bin/php/php5.3.29/bin:$PATH
export EC2_HOME=~/.ec2
export EC2_URL=https://eu-west-1.ec2.amazonaws.com/
export PATH=$PATH:/Users/chris/.ec2/bin
export EC2_PRIVATE_KEY=/Users/chris/.ec2/pk-MXC5ZMQLPN46GR3KHQRD5GMCNPB5ETOK.pem
export EC2_CERT=/Users/chris/.ec2/cert-MXC5ZMQLPN46GR3KHQRD5GMCNPB5ETOK.pem
export ANDROID_HOME=/usr/local/opt/android-sdk/
# pip should only run if there is a virtualenv currently activated
export PIP_REQUIRE_VIRTUALENV=true
# cache pip-installed packages to avoid re-downloading
export PIP_DOWNLOAD_CACHE=$HOME/.pip/cache

# set where virtual environments will live
export WORKON_HOME=$HOME/.virtualenvs
# use the same directory for virtualenvs as virtualenvwrapper
export PIP_VIRTUALENV_BASE=$WORKON_HOME
# makes pip detect an active virtualenv and install to it
export PIP_RESPECT_VIRTUALENV=true
export VIRTUALENVWRAPPER_PYTHON=/usr/local/bin/python   # make sure this is the python version you want to point to
export VIRTUALENVWRAPPER_VIRTUALENV=/usr/local/bin/virtualenv
export LDFLAGS="-L/usr/local/opt/openssl/lib"
export CPPFLAGS="-I/usr/local/opt/openssl/include"
export PKG_CONFIG_PATH="/usr/local/opt/openssl/lib/pkgconfig"
export SDKROOT=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk
source /usr/local/bin/virtualenvwrapper.sh
export NVM_DIR="$HOME/.nvm"
  [ -s "/usr/local/opt/nvm/nvm.sh" ] && . "/usr/local/opt/nvm/nvm.sh"  # This loads nvm
  [ -s "/usr/local/opt/nvm/etc/bash_completion" ] && . "/usr/local/opt/nvm/etc/bash_completion"  # This loads nvm bash_completion
